name: 'Run Daft.ai Script'
description: 'Run a Python script with the Daft.ai library'
author: 'Your GitHub Username'
inputs:
  script:
    description: 'Content of a Python script that imports daft'
    required: false
  script_file:
    description: 'Path to a Python script that imports daft (relative to the repository root)'
    required: false
  daft_version:
    description: 'Version of Daft to install (default: latest)'
    required: false
    default: 'latest'
runs:
  using: 'composite'
  steps:
    - name: Validate inputs
      shell: bash
      run: |
        SCRIPT_FILE="${{ inputs.script_file }}"
        SCRIPT="${{ inputs.script }}"
        if [[ -z "$SCRIPT_FILE" && -z "$SCRIPT" ]]; then
          echo "Error: Either 'script_file' or 'script' input parameter must be provided."
          exit 1
        fi
        if [[ ! -z "$SCRIPT_FILE" && ! -z "$SCRIPT" ]]; then
          echo "Error: Both 'script_file' and 'script' input parameters were provided. Please provide only one."
          exit 1
        fi
    - name: Create requirements file
      shell: bash
      run: |
        # Create requirements file for caching
        if [[ "${{ inputs.daft_version }}" == "latest" ]]; then
          echo "daft" > requirements.txt
        else
          echo "daft==${{ inputs.daft_version }}" > requirements.txt
        fi
        echo "Created requirements.txt with: $(cat requirements.txt)"
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        cache: 'pip'
        cache-dependency-path: requirements.txt
    - name: Install Daft
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run script file
      if: inputs.script_file != ''
      shell: bash
      run: |
        SCRIPT_FILE="${{ inputs.script_file }}"
        if [ ! -f "$SCRIPT_FILE" ]; then
          echo "Error: Script file not found at '$SCRIPT_FILE'"
          exit 1
        fi
        python "$SCRIPT_FILE"
    - name: Run script content
      if: inputs.script != ''
      shell: bash
      run: |
        cat <<'EOF' > daft_script.py
${{ inputs.script }}
EOF
        python daft_script.py
        rm daft_script.py
branding:
  icon: 'cpu'
  color: 'purple'
